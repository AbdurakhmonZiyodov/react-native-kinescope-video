/* eslint-disable tsdoc/syntax */
/* eslint-disable max-classes-per-file */

// https://gitlab.kinescope.io/kinescope/player-metrics/-/raw/main/proto/metrics.ts

// @generated by protobuf-ts 2.2.1 with parameter optimize_code_size
// @generated from protobuf file "proto/metrics.proto" (package "proto", syntax proto3)
// tslint:disable
import {MessageType} from '@protobuf-ts/runtime';
/**
 * @generated from protobuf message proto.Player
 */
export interface Player {
	/**
	 * @generated from protobuf field: string Version = 1 [json_name = "Version"];
	 */
	version: string;
}
/**
 * @generated from protobuf message proto.Session
 */
export interface Session {
	/**
	 * @generated from protobuf field: string ID = 1 [json_name = "ID"];
	 */
	iD: string;
	/**
	 * @generated from protobuf field: string ViewID = 2 [json_name = "ViewID"];
	 */
	viewID: string;
	/**
	 * @generated from protobuf field: string ExternalID = 3 [json_name = "ExternalID"];
	 */
	externalID: string;
}
/**
 * @generated from protobuf message proto.OS
 */
export interface OS {
	/**
	 * @generated from protobuf field: string Name = 1 [json_name = "Name"];
	 */
	name: string;
	/**
	 * @generated from protobuf field: string Version = 2 [json_name = "Version"];
	 */
	version: string;
}
/**
 * @generated from protobuf message proto.CPU
 */
export interface CPU {
	/**
	 * @generated from protobuf field: string Arch = 1 [json_name = "Arch"];
	 */
	arch: string;
	/**
	 * @generated from protobuf field: uint32 Num = 2 [json_name = "Num"];
	 */
	num: number;
}
/**
 * @generated from protobuf message proto.Device
 */
export interface Device {
	/**
	 * @generated from protobuf field: proto.CPU CPU = 1 [json_name = "CPU"];
	 */
	cPU?: CPU;
	/**
	 * @generated from protobuf field: string Type = 2 [json_name = "Type"];
	 */
	type: string;
	/**
	 * @generated from protobuf field: string Model = 3 [json_name = "Model"];
	 */
	model: string;
	/**
	 * @generated from protobuf field: string Vendor = 4 [json_name = "Vendor"];
	 */
	vendor: string;
	/**
	 * @generated from protobuf field: uint32 TotalMemory = 5 [json_name = "TotalMemory"];
	 */
	totalMemory: number;
}
/**
 * @generated from protobuf message proto.Browser
 */
export interface Browser {
	/**
	 * @generated from protobuf field: string Name = 1 [json_name = "Name"];
	 */
	name: string;
	/**
	 * @generated from protobuf field: string Version = 2 [json_name = "Version"];
	 */
	version: string;
	/**
	 * @generated from protobuf field: proto.BrowserEngine Engine = 3 [json_name = "Engine"];
	 */
	engine?: BrowserEngine;
}
/**
 * @generated from protobuf message proto.BrowserEngine
 */
export interface BrowserEngine {
	/**
	 * @generated from protobuf field: string Name = 1 [json_name = "Name"];
	 */
	name: string;
	/**
	 * @generated from protobuf field: string Version = 2 [json_name = "Version"];
	 */
	version: string;
}
/**
 * @generated from protobuf message proto.Screen
 */
export interface Screen {
	/**
	 * @generated from protobuf field: uint32 Width = 1 [json_name = "Width"];
	 */
	width: number;
	/**
	 * @generated from protobuf field: uint32 Height = 2 [json_name = "Height"];
	 */
	height: number;
	/**
	 * @generated from protobuf field: uint32 ColorDepth = 3 [json_name = "ColorDepth"];
	 */
	colorDepth: number;
}
/**
 * @generated from protobuf message proto.Timestamp
 */
export interface Timestamp {
	/**
	 * @generated from protobuf field: uint32 Client = 1 [json_name = "Client"];
	 */
	client: number;
	/**
	 * @generated from protobuf field: uint32 Server = 2 [json_name = "Server"];
	 */
	server: number;
}
/**
 * @generated from protobuf message proto.TechSpecs
 */
export interface TechSpecs {
	/**
	 * @generated from protobuf field: proto.OS OS = 1 [json_name = "OS"];
	 */
	oS?: OS;
	/**
	 * @generated from protobuf field: proto.Device Device = 2 [json_name = "Device"];
	 */
	device?: Device;
	/**
	 * @generated from protobuf field: proto.Screen Screen = 3 [json_name = "Screen"];
	 */
	screen?: Screen;
	/**
	 * @generated from protobuf field: proto.Browser Browser = 4 [json_name = "Browser"];
	 */
	browser?: Browser;
	/**
	 * @generated from protobuf field: proto.Timestamp Timestamp = 5 [json_name = "Timestamp"];
	 */
	timestamp?: Timestamp;
}
/**
 * @generated from protobuf message proto.Media
 */
export interface Media {
	/**
	 * @generated from protobuf field: string Type = 1 [json_name = "Type"];
	 */
	type: string; // vod/live
	/**
	 * @generated from protobuf field: string VideoID = 2 [json_name = "VideoID"];
	 */
	videoID: string;
	/**
	 * @generated from protobuf field: string FolderID = 3 [json_name = "FolderID"];
	 */
	folderID: string;
	/**
	 * @generated from protobuf field: string ProjectID = 4 [json_name = "ProjectID"];
	 */
	projectID: string;
	/**
	 * @generated from protobuf field: string WorkspaceID = 5 [json_name = "WorkspaceID"];
	 */
	workspaceID: string;
}
/**
 * @generated from protobuf message proto.PerformanceMemory
 */
export interface PerformanceMemory {
	/**
	 * @generated from protobuf field: uint32 HeapSizeLimit = 1 [json_name = "HeapSizeLimit"];
	 */
	heapSizeLimit: number;
	/**
	 * @generated from protobuf field: uint32 AllocHeapSize = 2 [json_name = "AllocHeapSize"];
	 */
	allocHeapSize: number;
	/**
	 * @generated from protobuf field: uint32 UsedHeapSize = 3 [json_name = "UsedHeapSize"];
	 */
	usedHeapSize: number;
}
/**
 * @generated from protobuf message proto.ResourceTiming
 */
export interface ResourceTiming {
	/**
	 * @generated from protobuf field: float DNS = 1 [json_name = "DNS"];
	 */
	dNS: number;
	/**
	 * @generated from protobuf field: float FetchTime = 2 [json_name = "FetchTime"];
	 */
	fetchTime: number;
	/**
	 * @generated from protobuf field: float TTFB = 3 [json_name = "TTFB"];
	 */
	tTFB: number;
	/**
	 * @generated from protobuf field: float Download = 4 [json_name = "Download"];
	 */
	download: number;
	/**
	 * @generated from protobuf field: float Total = 5 [json_name = "Total"];
	 */
	total: number;
	/**
	 * @generated from protobuf field: uint32 Size = 6 [json_name = "Size"];
	 */
	size: number;
	/**
	 * @generated from protobuf field: string Source = 7 [json_name = "Source"];
	 */
	source: string;
}
/**
 * @generated from protobuf message proto.Performance
 */
export interface Performance {
	/**
	 * @generated from protobuf field: string NetEffectiveType = 1 [json_name = "NetEffectiveType"];
	 */
	netEffectiveType: string; // Network_Information_API
	/**
	 * @generated from protobuf field: proto.PerformanceMemory Memory = 2 [json_name = "Memory"];
	 */
	memory?: PerformanceMemory;
	/**
	 * @generated from protobuf field: proto.ResourceTiming ResourceTiming = 3 [json_name = "ResourceTiming"];
	 */
	resourceTiming?: ResourceTiming;
	/**
	 * @generated from protobuf field: uint32 Timestamp = 4 [json_name = "Timestamp"];
	 */
	timestamp: number;
}
/**
 * @generated from protobuf message proto.Event
 */
export interface Event {
	/**
	 * @generated from protobuf field: string Type = 1 [json_name = "Type"];
	 */
	type: string;
	/**
	 * @generated from protobuf field: float Value = 2 [json_name = "Value"];
	 */
	value: number;
	/**
	 * @generated from protobuf field: uint32 WatchedSec = 3 [json_name = "WatchedSec"];
	 */
	watchedSec: number;
	/**
	 * @generated from protobuf field: uint32 PreviewPos = 4 [json_name = "PreviewPos"];
	 */
	previewPos: number;
	/**
	 * @generated from protobuf field: uint32 CurrentPos = 5 [json_name = "CurrentPos"];
	 */
	currentPos: number;
	/**
	 * @generated from protobuf field: proto.Properties Properties = 6 [json_name = "Properties"];
	 */
	properties?: Properties;
	/**
	 * @generated from protobuf field: uint32 Duration = 7 [json_name = "Duration"];
	 */
	duration: number;
	/**
	 * @generated from protobuf field: uint32 Timestamp = 8 [json_name = "Timestamp"];
	 */
	timestamp: number;
}
/**
 * @generated from protobuf message proto.Properties
 */
export interface Properties {
	/**
	 * @generated from protobuf field: float Speed = 1 [json_name = "Speed"];
	 */
	speed: number;
	/**
	 * @generated from protobuf field: uint32 Volume = 2 [json_name = "Volume"];
	 */
	volume: number;
	/**
	 * @generated from protobuf field: string Quality = 3 [json_name = "Quality"];
	 */
	quality: string;
	/**
	 * @generated from protobuf field: bool IsMuted = 4 [json_name = "IsMuted"];
	 */
	isMuted: boolean;
	/**
	 * @generated from protobuf field: bool IsFullscreen = 5 [json_name = "IsFullscreen"];
	 */
	isFullscreen: boolean;
}
/**
 * @generated from protobuf message proto.Error
 */
export interface Error {
	/**
	 * @generated from protobuf field: string Type = 1 [json_name = "Type"];
	 */
	type: string;
	/**
	 * @generated from protobuf field: string Message = 2 [json_name = "Message"];
	 */
	message: string;
	/**
	 * @generated from protobuf field: uint32 Timestamp = 3 [json_name = "Timestamp"];
	 */
	timestamp: number;
}
/**
 * @generated from protobuf message proto.Batch
 */
export interface Batch {
	/**
	 * @generated from protobuf field: proto.Player Player = 1 [json_name = "Player"];
	 */
	player?: Player;
	/**
	 * @generated from protobuf field: proto.Media Media = 2 [json_name = "Media"];
	 */
	media?: Media;
	/**
	 * @generated from protobuf field: proto.Session Session = 3 [json_name = "Session"];
	 */
	session?: Session;
	/**
	 * @generated from protobuf field: proto.TechSpecs TechSpecs = 4 [json_name = "TechSpecs"];
	 */
	techSpecs?: TechSpecs;
	/**
	 * @generated from protobuf field: proto.ResourceTiming NavigationTiming = 5 [json_name = "NavigationTiming"];
	 */
	navigationTiming?: ResourceTiming;
	/**
	 * @generated from protobuf field: repeated proto.Error Errors = 6 [json_name = "Errors"];
	 */
	errors: Error[];
	/**
	 * @generated from protobuf field: repeated proto.Event Events = 7 [json_name = "Events"];
	 */
	events: Event[];
	/**
	 * @generated from protobuf field: repeated proto.Performance Performance = 8 [json_name = "Performance"];
	 */
	performance: Performance[];
}
/**
 * @generated from protobuf message proto.Container
 */
export interface Container {
	/**
	 * @generated from protobuf field: bytes Addr = 1 [json_name = "Addr"];
	 */
	addr: Uint8Array;
	/**
	 * @generated from protobuf field: proto.Batch Batch = 2 [json_name = "Batch"];
	 */
	batch?: Batch;
}
// @generated message type with reflection information, may provide speed optimized methods
class Player$Type extends MessageType<Player> {
	constructor() {
		super('proto.Player', [
			{
				no: 1,
				name: 'Version',
				kind: 'scalar',
				jsonName: 'Version',
				T: 9 /* ScalarType.STRING */,
				options: {'gogoproto.moretags': 'ch:"player_version"'},
			},
		]);
	}
}
/**
 * @generated MessageType for protobuf message proto.Player
 */
export const Player = new Player$Type();
// @generated message type with reflection information, may provide speed optimized methods
class Session$Type extends MessageType<Session> {
	constructor() {
		super('proto.Session', [
			{no: 1, name: 'ID', kind: 'scalar', jsonName: 'ID', T: 9 /* ScalarType.STRING */},
			{no: 2, name: 'ViewID', kind: 'scalar', jsonName: 'ViewID', T: 9 /* ScalarType.STRING */},
			{
				no: 3,
				name: 'ExternalID',
				kind: 'scalar',
				jsonName: 'ExternalID',
				T: 9 /* ScalarType.STRING */,
			},
		]);
	}
}
/**
 * @generated MessageType for protobuf message proto.Session
 */
export const Session = new Session$Type();
// @generated message type with reflection information, may provide speed optimized methods
class OS$Type extends MessageType<OS> {
	constructor() {
		super('proto.OS', [
			{
				no: 1,
				name: 'Name',
				kind: 'scalar',
				jsonName: 'Name',
				T: 9 /* ScalarType.STRING */,
				options: {'gogoproto.moretags': 'ch:"os"'},
			},
			{
				no: 2,
				name: 'Version',
				kind: 'scalar',
				jsonName: 'Version',
				T: 9 /* ScalarType.STRING */,
				options: {'gogoproto.moretags': 'ch:"os_version"'},
			},
		]);
	}
}
/**
 * @generated MessageType for protobuf message proto.OS
 */
export const OS = new OS$Type();
// @generated message type with reflection information, may provide speed optimized methods
class CPU$Type extends MessageType<CPU> {
	constructor() {
		super('proto.CPU', [
			{
				no: 1,
				name: 'Arch',
				kind: 'scalar',
				jsonName: 'Arch',
				T: 9 /* ScalarType.STRING */,
				options: {'gogoproto.moretags': 'ch:"device_cpu_arch"'},
			},
			{
				no: 2,
				name: 'Num',
				kind: 'scalar',
				jsonName: 'Num',
				T: 13 /* ScalarType.UINT32 */,
				options: {
					'gogoproto.nullable': false,
					'gogoproto.customtype': 'uint8',
					'gogoproto.moretags': 'ch:"device_cpu_num"',
				},
			},
		]);
	}
}
/**
 * @generated MessageType for protobuf message proto.CPU
 */
export const CPU = new CPU$Type();
// @generated message type with reflection information, may provide speed optimized methods
class Device$Type extends MessageType<Device> {
	constructor() {
		super('proto.Device', [
			{
				no: 1,
				name: 'CPU',
				kind: 'message',
				jsonName: 'CPU',
				T: () => CPU,
				options: {'gogoproto.nullable': false},
			},
			{
				no: 2,
				name: 'Type',
				kind: 'scalar',
				jsonName: 'Type',
				T: 9 /* ScalarType.STRING */,
				options: {'gogoproto.moretags': 'ch:"device_type"'},
			},
			{
				no: 3,
				name: 'Model',
				kind: 'scalar',
				jsonName: 'Model',
				T: 9 /* ScalarType.STRING */,
				options: {'gogoproto.moretags': 'ch:"device_model"'},
			},
			{
				no: 4,
				name: 'Vendor',
				kind: 'scalar',
				jsonName: 'Vendor',
				T: 9 /* ScalarType.STRING */,
				options: {'gogoproto.moretags': 'ch:"device_vendor"'},
			},
			{
				no: 5,
				name: 'TotalMemory',
				kind: 'scalar',
				jsonName: 'TotalMemory',
				T: 13 /* ScalarType.UINT32 */,
				options: {
					'gogoproto.nullable': false,
					'gogoproto.customtype': 'uint8',
					'gogoproto.moretags': 'ch:"device_total_memory"',
				},
			},
		]);
	}
}
/**
 * @generated MessageType for protobuf message proto.Device
 */
export const Device = new Device$Type();
// @generated message type with reflection information, may provide speed optimized methods
class Browser$Type extends MessageType<Browser> {
	constructor() {
		super('proto.Browser', [
			{no: 1, name: 'Name', kind: 'scalar', jsonName: 'Name', T: 9 /* ScalarType.STRING */},
			{no: 2, name: 'Version', kind: 'scalar', jsonName: 'Version', T: 9 /* ScalarType.STRING */},
			{
				no: 3,
				name: 'Engine',
				kind: 'message',
				jsonName: 'Engine',
				T: () => BrowserEngine,
				options: {'gogoproto.nullable': false},
			},
		]);
	}
}
/**
 * @generated MessageType for protobuf message proto.Browser
 */
export const Browser = new Browser$Type();
// @generated message type with reflection information, may provide speed optimized methods
class BrowserEngine$Type extends MessageType<BrowserEngine> {
	constructor() {
		super('proto.BrowserEngine', [
			{no: 1, name: 'Name', kind: 'scalar', jsonName: 'Name', T: 9 /* ScalarType.STRING */},
			{no: 2, name: 'Version', kind: 'scalar', jsonName: 'Version', T: 9 /* ScalarType.STRING */},
		]);
	}
}
/**
 * @generated MessageType for protobuf message proto.BrowserEngine
 */
export const BrowserEngine = new BrowserEngine$Type();
// @generated message type with reflection information, may provide speed optimized methods
class Screen$Type extends MessageType<Screen> {
	constructor() {
		super('proto.Screen', [
			{
				no: 1,
				name: 'Width',
				kind: 'scalar',
				jsonName: 'Width',
				T: 13 /* ScalarType.UINT32 */,
				options: {
					'gogoproto.nullable': false,
					'gogoproto.customtype': 'uint16',
					'gogoproto.moretags': 'ch:"screen_width"',
				},
			},
			{
				no: 2,
				name: 'Height',
				kind: 'scalar',
				jsonName: 'Height',
				T: 13 /* ScalarType.UINT32 */,
				options: {
					'gogoproto.nullable': false,
					'gogoproto.customtype': 'uint16',
					'gogoproto.moretags': 'ch:"screen_height"',
				},
			},
			{
				no: 3,
				name: 'ColorDepth',
				kind: 'scalar',
				jsonName: 'ColorDepth',
				T: 13 /* ScalarType.UINT32 */,
				options: {
					'gogoproto.nullable': false,
					'gogoproto.customtype': 'uint8',
					'gogoproto.moretags': 'ch:"screen_color_depth"',
				},
			},
		]);
	}
}
/**
 * @generated MessageType for protobuf message proto.Screen
 */
export const Screen = new Screen$Type();
// @generated message type with reflection information, may provide speed optimized methods
class Timestamp$Type extends MessageType<Timestamp> {
	constructor() {
		super('proto.Timestamp', [
			{no: 1, name: 'Client', kind: 'scalar', jsonName: 'Client', T: 13 /* ScalarType.UINT32 */},
			{no: 2, name: 'Server', kind: 'scalar', jsonName: 'Server', T: 13 /* ScalarType.UINT32 */},
		]);
	}
}
/**
 * @generated MessageType for protobuf message proto.Timestamp
 */
export const Timestamp = new Timestamp$Type();
// @generated message type with reflection information, may provide speed optimized methods
class TechSpecs$Type extends MessageType<TechSpecs> {
	constructor() {
		super('proto.TechSpecs', [
			{
				no: 1,
				name: 'OS',
				kind: 'message',
				jsonName: 'OS',
				T: () => OS,
				options: {'gogoproto.nullable': false},
			},
			{
				no: 2,
				name: 'Device',
				kind: 'message',
				jsonName: 'Device',
				T: () => Device,
				options: {'gogoproto.nullable': false},
			},
			{
				no: 3,
				name: 'Screen',
				kind: 'message',
				jsonName: 'Screen',
				T: () => Screen,
				options: {'gogoproto.nullable': false},
			},
			{
				no: 4,
				name: 'Browser',
				kind: 'message',
				jsonName: 'Browser',
				T: () => Browser,
				options: {'gogoproto.nullable': false},
			},
			{
				no: 5,
				name: 'Timestamp',
				kind: 'message',
				jsonName: 'Timestamp',
				T: () => Timestamp,
				options: {'gogoproto.nullable': false},
			},
		]);
	}
}
/**
 * @generated MessageType for protobuf message proto.TechSpecs
 */
export const TechSpecs = new TechSpecs$Type();
// @generated message type with reflection information, may provide speed optimized methods
class Media$Type extends MessageType<Media> {
	constructor() {
		super('proto.Media', [
			{no: 1, name: 'Type', kind: 'scalar', jsonName: 'Type', T: 9 /* ScalarType.STRING */},
			{no: 2, name: 'VideoID', kind: 'scalar', jsonName: 'VideoID', T: 9 /* ScalarType.STRING */},
			{
				no: 3,
				name: 'FolderID',
				kind: 'scalar',
				jsonName: 'FolderID',
				T: 9 /* ScalarType.STRING */,
			},
			{
				no: 4,
				name: 'ProjectID',
				kind: 'scalar',
				jsonName: 'ProjectID',
				T: 9 /* ScalarType.STRING */,
			},
			{
				no: 5,
				name: 'WorkspaceID',
				kind: 'scalar',
				jsonName: 'WorkspaceID',
				T: 9 /* ScalarType.STRING */,
			},
		]);
	}
}
/**
 * @generated MessageType for protobuf message proto.Media
 */
export const Media = new Media$Type();
// @generated message type with reflection information, may provide speed optimized methods
class PerformanceMemory$Type extends MessageType<PerformanceMemory> {
	constructor() {
		super('proto.PerformanceMemory', [
			{
				no: 1,
				name: 'HeapSizeLimit',
				kind: 'scalar',
				jsonName: 'HeapSizeLimit',
				T: 13 /* ScalarType.UINT32 */,
			},
			{
				no: 2,
				name: 'AllocHeapSize',
				kind: 'scalar',
				jsonName: 'AllocHeapSize',
				T: 13 /* ScalarType.UINT32 */,
			},
			{
				no: 3,
				name: 'UsedHeapSize',
				kind: 'scalar',
				jsonName: 'UsedHeapSize',
				T: 13 /* ScalarType.UINT32 */,
			},
		]);
	}
}
/**
 * @generated MessageType for protobuf message proto.PerformanceMemory
 */
export const PerformanceMemory = new PerformanceMemory$Type();
// @generated message type with reflection information, may provide speed optimized methods
class ResourceTiming$Type extends MessageType<ResourceTiming> {
	constructor() {
		super('proto.ResourceTiming', [
			{no: 1, name: 'DNS', kind: 'scalar', jsonName: 'DNS', T: 2 /* ScalarType.FLOAT */},
			{
				no: 2,
				name: 'FetchTime',
				kind: 'scalar',
				jsonName: 'FetchTime',
				T: 2 /* ScalarType.FLOAT */,
			},
			{no: 3, name: 'TTFB', kind: 'scalar', jsonName: 'TTFB', T: 2 /* ScalarType.FLOAT */},
			{
				no: 4,
				name: 'Download',
				kind: 'scalar',
				jsonName: 'Download',
				T: 2 /* ScalarType.FLOAT */,
			},
			{no: 5, name: 'Total', kind: 'scalar', jsonName: 'Total', T: 2 /* ScalarType.FLOAT */},
			{no: 6, name: 'Size', kind: 'scalar', jsonName: 'Size', T: 13 /* ScalarType.UINT32 */},
			{no: 7, name: 'Source', kind: 'scalar', jsonName: 'Source', T: 9 /* ScalarType.STRING */},
		]);
	}
}
/**
 * @generated MessageType for protobuf message proto.ResourceTiming
 */
export const ResourceTiming = new ResourceTiming$Type();
// @generated message type with reflection information, may provide speed optimized methods
class Performance$Type extends MessageType<Performance> {
	constructor() {
		super('proto.Performance', [
			{
				no: 1,
				name: 'NetEffectiveType',
				kind: 'scalar',
				jsonName: 'NetEffectiveType',
				T: 9 /* ScalarType.STRING */,
			},
			{
				no: 2,
				name: 'Memory',
				kind: 'message',
				jsonName: 'Memory',
				T: () => PerformanceMemory,
				options: {'gogoproto.nullable': false},
			},
			{
				no: 3,
				name: 'ResourceTiming',
				kind: 'message',
				jsonName: 'ResourceTiming',
				T: () => ResourceTiming,
				options: {'gogoproto.nullable': false},
			},
			{
				no: 4,
				name: 'Timestamp',
				kind: 'scalar',
				jsonName: 'Timestamp',
				T: 13 /* ScalarType.UINT32 */,
			},
		]);
	}
}
/**
 * @generated MessageType for protobuf message proto.Performance
 */
export const Performance = new Performance$Type();
// @generated message type with reflection information, may provide speed optimized methods
class Event$Type extends MessageType<Event> {
	constructor() {
		super('proto.Event', [
			{no: 1, name: 'Type', kind: 'scalar', jsonName: 'Type', T: 9 /* ScalarType.STRING */},
			{no: 2, name: 'Value', kind: 'scalar', jsonName: 'Value', T: 2 /* ScalarType.FLOAT */},
			{
				no: 3,
				name: 'WatchedSec',
				kind: 'scalar',
				jsonName: 'WatchedSec',
				T: 13 /* ScalarType.UINT32 */,
			},
			{
				no: 4,
				name: 'PreviewPos',
				kind: 'scalar',
				jsonName: 'PreviewPos',
				T: 13 /* ScalarType.UINT32 */,
			},
			{
				no: 5,
				name: 'CurrentPos',
				kind: 'scalar',
				jsonName: 'CurrentPos',
				T: 13 /* ScalarType.UINT32 */,
			},
			{
				no: 6,
				name: 'Properties',
				kind: 'message',
				jsonName: 'Properties',
				T: () => Properties,
				options: {'gogoproto.nullable': false},
			},
			{
				no: 7,
				name: 'Duration',
				kind: 'scalar',
				jsonName: 'Duration',
				T: 13 /* ScalarType.UINT32 */,
			},
			{
				no: 8,
				name: 'Timestamp',
				kind: 'scalar',
				jsonName: 'Timestamp',
				T: 13 /* ScalarType.UINT32 */,
			},
		]);
	}
}
/**
 * @generated MessageType for protobuf message proto.Event
 */
export const Event = new Event$Type();
// @generated message type with reflection information, may provide speed optimized methods
class Properties$Type extends MessageType<Properties> {
	constructor() {
		super('proto.Properties', [
			{no: 1, name: 'Speed', kind: 'scalar', jsonName: 'Speed', T: 2 /* ScalarType.FLOAT */},
			{no: 2, name: 'Volume', kind: 'scalar', jsonName: 'Volume', T: 13 /* ScalarType.UINT32 */},
			{no: 3, name: 'Quality', kind: 'scalar', jsonName: 'Quality', T: 9 /* ScalarType.STRING */},
			{no: 4, name: 'IsMuted', kind: 'scalar', jsonName: 'IsMuted', T: 8 /* ScalarType.BOOL */},
			{
				no: 5,
				name: 'IsFullscreen',
				kind: 'scalar',
				jsonName: 'IsFullscreen',
				T: 8 /* ScalarType.BOOL */,
			},
		]);
	}
}
/**
 * @generated MessageType for protobuf message proto.Properties
 */
export const Properties = new Properties$Type();
// @generated message type with reflection information, may provide speed optimized methods
class Error$Type extends MessageType<Error> {
	constructor() {
		super('proto.Error', [
			{no: 1, name: 'Type', kind: 'scalar', jsonName: 'Type', T: 9 /* ScalarType.STRING */},
			{no: 2, name: 'Message', kind: 'scalar', jsonName: 'Message', T: 9 /* ScalarType.STRING */},
			{
				no: 3,
				name: 'Timestamp',
				kind: 'scalar',
				jsonName: 'Timestamp',
				T: 13 /* ScalarType.UINT32 */,
			},
		]);
	}
}
/**
 * @generated MessageType for protobuf message proto.Error
 */
export const Error = new Error$Type();
// @generated message type with reflection information, may provide speed optimized methods
class Batch$Type extends MessageType<Batch> {
	constructor() {
		super('proto.Batch', [
			{
				no: 1,
				name: 'Player',
				kind: 'message',
				jsonName: 'Player',
				T: () => Player,
				options: {'gogoproto.nullable': false},
			},
			{
				no: 2,
				name: 'Media',
				kind: 'message',
				jsonName: 'Media',
				T: () => Media,
				options: {'gogoproto.nullable': false},
			},
			{
				no: 3,
				name: 'Session',
				kind: 'message',
				jsonName: 'Session',
				T: () => Session,
				options: {'gogoproto.nullable': false},
			},
			{
				no: 4,
				name: 'TechSpecs',
				kind: 'message',
				jsonName: 'TechSpecs',
				T: () => TechSpecs,
				options: {'gogoproto.nullable': false},
			},
			{
				no: 5,
				name: 'NavigationTiming',
				kind: 'message',
				jsonName: 'NavigationTiming',
				T: () => ResourceTiming,
				options: {'gogoproto.nullable': false},
			},
			{
				no: 6,
				name: 'Errors',
				kind: 'message',
				jsonName: 'Errors',
				repeat: 1 /* RepeatType.PACKED */,
				T: () => Error,
				options: {'gogoproto.nullable': false},
			},
			{
				no: 7,
				name: 'Events',
				kind: 'message',
				jsonName: 'Events',
				repeat: 1 /* RepeatType.PACKED */,
				T: () => Event,
				options: {'gogoproto.nullable': false},
			},
			{
				no: 8,
				name: 'Performance',
				kind: 'message',
				jsonName: 'Performance',
				repeat: 1 /* RepeatType.PACKED */,
				T: () => Performance,
				options: {'gogoproto.nullable': false},
			},
		]);
	}
}
/**
 * @generated MessageType for protobuf message proto.Batch
 */
export const Batch = new Batch$Type();
